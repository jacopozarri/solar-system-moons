// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace moons.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230314211657_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DefaultNamespace.ExtraMoonImage", b =>
                {
                    b.Property<int>("ExtraImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoonId")
                        .HasColumnType("int");

                    b.HasKey("ExtraImageId");

                    b.HasIndex("MoonId");

                    b.ToTable("ExtraMoonImage");
                });

            modelBuilder.Entity("DefaultNamespace.ExtraPlanetImage", b =>
                {
                    b.Property<int>("ExtraImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.HasKey("ExtraImageId");

                    b.HasIndex("PlanetId");

                    b.ToTable("ExtraPlanetImage");
                });

            modelBuilder.Entity("DefaultNamespace.Moon", b =>
                {
                    b.Property<int>("MoonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoonId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.HasKey("MoonId");

                    b.HasIndex("PlanetId");

                    b.ToTable("Moon");
                });

            modelBuilder.Entity("DefaultNamespace.Planet", b =>
                {
                    b.Property<int>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanetId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanetId");

                    b.ToTable("Planet");
                });

            modelBuilder.Entity("DefaultNamespace.ExtraMoonImage", b =>
                {
                    b.HasOne("DefaultNamespace.Moon", null)
                        .WithMany("ExtraMoonImages")
                        .HasForeignKey("MoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefaultNamespace.ExtraPlanetImage", b =>
                {
                    b.HasOne("DefaultNamespace.Planet", null)
                        .WithMany("ExtraPlanetImages")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefaultNamespace.Moon", b =>
                {
                    b.HasOne("DefaultNamespace.Planet", null)
                        .WithMany("Moons")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefaultNamespace.Moon", b =>
                {
                    b.Navigation("ExtraMoonImages");
                });

            modelBuilder.Entity("DefaultNamespace.Planet", b =>
                {
                    b.Navigation("ExtraPlanetImages");

                    b.Navigation("Moons");
                });
#pragma warning restore 612, 618
        }
    }
}
